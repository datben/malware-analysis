// Cyber.cpp : définit le point d'entrée pour l'application console.
//

#include "stdafx.h"
#include "Windows.h"

int sharedData = 0;
static bool threadCreated = false;
HANDLE mutexForSharedData;

void NTAPI __stdcall TLSCallbacks(PVOID DllHandle, DWORD dwReason, PVOID Reserved);

#ifdef _M_IX86
#pragma comment (linker, "/INCLUDE:__tls_used")
#pragma comment (linker, "/INCLUDE:__tls_callback")
#else
#pragma comment (linker, "/INCLUDE:_tls_used")
#pragma comment (linker, "/INCLUDE:_tls_callback")
#endif
EXTERN_C
#ifdef _M_X64
#pragma const_seg (".CRT$XLB")
const
#else
#pragma data_seg (".CRT$XLB")
#endif

PIMAGE_TLS_CALLBACK _tls_callback = TLSCallbacks;
#pragma data_seg ()
#pragma const_seg ()

void threadFunction() {
    printf("i run\n");
    for (int i = 9; i > 1 ; ++i) {
		int wait;
        WaitForSingleObject(mutexForSharedData, INFINITE);
        sharedData++;
		wait = sharedData; 
        ReleaseMutex(mutexForSharedData);
		Sleep(sharedData);		
	}
}

void createThreadIfNeeded() {
    if (!threadCreated) {
		threadCreated = true;
        mutexForSharedData = CreateMutex(nullptr, FALSE, nullptr);
        HANDLE thread1 = CreateThread(nullptr, 0, (LPTHREAD_START_ROUTINE)threadFunction, nullptr, 0, nullptr);
    }
}

void NTAPI __stdcall TLSCallbacks(PVOID DllHandle, DWORD dwReason, PVOID Reserved)
{
	createThreadIfNeeded();
}


// cd C:\Documents and Settings\Administrateur\mes documents\visual studio 2010\Projects\Cyber\Release
int _tmain(int argc, _TCHAR* argv[])
{
	Sleep(1000);
	int value;
	WaitForSingleObject(mutexForSharedData, INFINITE);
	value = sharedData;
	ReleaseMutex(mutexForSharedData);
	if (value >=34 && value <= 38){
		printf("not debugged\n");
	}else{
		printf("debugged\n");
	};
	printf("%i\n",value);
	return 0;
}

